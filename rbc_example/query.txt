SPARQL QUERIES
attribute_1

SELECT COUNT(*) WHERE { 
?x rdf:type <http://data.linkedmdb.org/resource/movie/film> .
?x <http://data.linkedmdb.org/resource/movie/openingreceipt> ?y .
FILTER (?y < 2000000)
}


attribute_2

SELECT COUNT(*) WHERE {
   FILTER (?aveage <= 1940)

   {
   SELECT (AVG(?b) as ?aveage)
   WHERE { ?x rdf:type <http://data.linkedmdb.org/resource/movie/film> .
   	?x <http://data.linkedmdb.org/resource/movie/actor> ?y .
   	?y <http://xmlns.com/foaf/0.1/page> ?z .
   	?z <http://rdf.freebase.com/ns/people.person.birth_year> ?b .
   }
   GROUP BY ?x
   }
}


SELECT COUNT(*) WHERE {
   {
   SELECT (AVG(?b) as ?aveage) WHERE {
    ?x rdf:type <http://data.linkedmdb.org/resource/movie/film> .
    ?x <http://data.linkedmdb.org/resource/movie/openingreceipt> ?y .
    FILTER (?y < 2000000)
    
   	?x <http://data.linkedmdb.org/resource/movie/actor> ?y .
   	?y <http://xmlns.com/foaf/0.1/page> ?z .
   	?z <http://rdf.freebase.com/ns/people.person.height_meters> ?b .}
   GROUP BY ?x
   }
   FILTER (?aveage <= 1.75)
}



attribute_3

SELECT COUNT(*) WHERE {
  ?x rdf:type <http://data.linkedmdb.org/resource/movie/film> .
  ?x <http://data.linkedmdb.org/resource/movie/actor> ?y .
  ?y <http://xmlns.com/foaf/0.1/page> ?z .
  ?z <http://rdf.freebase.com/ns/people.person.gender> <http://rdf.freebase.com/ns/en.male> .
}

attribute_4@
"SELECT (COUNT(*) AS ?count) WHERE { 
?x rdf:type movie .
?x http://data.linkedmdb.org/resource/movie/rating PG (USA) .
}"


attribute_5@

SELECT COUNT(*) WHERE {
   FILTER (?degree <= 1)

   {
   SELECT (COUNT(?d) AS ?degree) WHERE {
        ?x rdf:type <http://data.linkedmdb.org/resource/movie/film> .
   	OPTIONAL {
	?x <http://data.linkedmdb.org/resource/movie/actor> ?y .
   	?y <http://xmlns.com/foaf/0.1/page> ?z .
   	?z <http://rdf.freebase.com/ns/award.award_winner.awards_won> ?d .
	}
   }
   GROUP BY ?x
   }
}

MISSING VALUES